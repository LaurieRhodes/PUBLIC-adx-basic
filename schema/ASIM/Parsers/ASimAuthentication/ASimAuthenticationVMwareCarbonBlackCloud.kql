//
// Function Name: ASimAuthenticationVMwareCarbonBlackCloud
// Description: This ASIM parser supports normalizing VMware Carbon Black Cloud logs to the ASIM Authentication normalized schema. VMware Carbon Black Cloud events are captured through VMware Carbon Black Cloud data connector which ingests Carbon Black Audit, Notification and Event data into Microsoft Sentinel through the REST API.

// Version: 
// Last Updated: 
//
.create-or-alter function with (skipvalidation=true) ASimAuthenticationVMwareCarbonBlackCloud(    ['disabled']:bool=False)
{
let parser = (disabled: bool=false) {
    CarbonBlackAuditLogs_CL
    | where not(disabled)
    | where description_s has_any ("logged in", "login","second factor authentication") and description_s !has "connector"
    | extend
        EventStartTime = unixtime_milliseconds_todatetime(eventTime_d),
        EventResult = iff(description_s has "successfully", "Success", "Failure"),
        AdditionalFields = bag_pack("flagged", flagged_b),
        EventSeverity = iff(flagged_b == true, "Low", "Informational")
    | extend
        EventCount = int(1),
        EventProduct = "Carbon Black Cloud",
        EventSchema = "Authentication",
        EventSchemaVersion = "0.1.3",
        EventVendor = "VMware",
        EventType = "Logon",
        EventResultDetails = case(
                       EventResult == "Failure" and description_s has ("locked"),
                       "User locked",
                       EventResult == "Failure" and description_s has_any ("logged in", "login"),
                       "Incorrect password",
                       EventResult == "Failure" and description_s has ("second factor authentication"),
                       "MFA not satisfied",
                       ""
                   ),
        EventOriginalResultDetails = iff(EventResult == "Failure", tostring(split(description_s, ';')[1]), "")
    | project-rename
        EventMessage = description_s,
        EventOriginalUid = eventId_g,
        TargetUsername = loginName_s,
        SrcIpAddr = clientIp_s,
        EventUid=_ItemId,
        EventOwner = orgName_s
    | extend
        IpAddr = SrcIpAddr,
        TargetUsernameType = _ASIM_GetUsernameType(TargetUsername),
        TargetUserType = _ASIM_GetUserType(TargetUsername, ""),
        Dvc = EventProduct,
        EventEndTime = EventStartTime,
        User = TargetUsername,
        Src = SrcIpAddr
    | project-away
        *_s,
        *_d,
        *_b,
        _ResourceId,
        Computer,
        MG,
        ManagementGroupName,
        RawData,
        SourceSystem,
        TenantId 
};
parser(disabled=disabled)
}
